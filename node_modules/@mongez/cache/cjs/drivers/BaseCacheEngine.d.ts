import { CacheDriverInterface } from "../types";
export default class BaseCacheEngine implements CacheDriverInterface {
    /**
     * Cache storage engine
     */
    storage: any;
    /**
     * Prefix key
     */
    prefixKey: string;
    /**
     * Value parser
     */
    protected _valueParser: any;
    /**
     * Value converter
     */
    protected _valueConverter: any;
    /**
     * set value parser
     */
    setValueParser(parser: any): this;
    /**
     * Set value converter
     */
    setValueConverter(converter: any): this;
    /**
     * Set data into storage engine
     */
    set(key: string, value: any, expiresAfter?: number): this;
    /**
     * Parse stored value
     */
    protected parseValue(value: any): any;
    /**
     * Set the mechanism to store data
     */
    protected convertValue(value: any): string;
    /**
     * Get vale from storage engine
     */
    get(key: string, defaultValue?: any): any;
    /**
     * Determine whether the cache engine has the given key
     */
    has(key: string): boolean;
    /**
     * Remove key from storage
     */
    remove(key: string): this;
    /**
     * Get a proper key
     */
    getKey(key: string): string;
    /**
     * Get prefix key
     */
    getPrefixKey(): string;
    /**
     * Set prefix key
     */
    setPrefixKey(key: string): this;
}
//# sourceMappingURL=BaseCacheEngine.d.ts.map